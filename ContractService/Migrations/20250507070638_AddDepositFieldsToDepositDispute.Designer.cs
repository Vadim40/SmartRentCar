// <auto-generated />
using System;
using ContractService.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContractService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250507070638_AddDepositFieldsToDepositDispute")]
    partial class AddDepositFieldsToDepositDispute
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ContractService.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ContractService.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DepositDisputeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RentalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContractId");

                    b.HasIndex("DepositDisputeId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ContractService.Models.DepositDispute", b =>
                {
                    b.Property<int>("DepositDisputeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DepositWithheld")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisputeStatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DepositDisputeId");

                    b.HasIndex("DisputeStatusId");

                    b.ToTable("DepositeDisputes");
                });

            modelBuilder.Entity("ContractService.Models.DisputeStatus", b =>
                {
                    b.Property<int>("DisputeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DisputeStatusId");

                    b.ToTable("DisputeStatuses");
                });

            modelBuilder.Entity("ContractService.Models.RentalDocument", b =>
                {
                    b.Property<int>("RentalDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepositDisputeId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RentalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentalDocumentId");

                    b.HasIndex("DepositDisputeId");

                    b.HasIndex("RentalId");

                    b.ToTable("RentalDocuments");
                });

            modelBuilder.Entity("ContractService.Models.RentalStatus", b =>
                {
                    b.Property<int>("RentalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RentalStatusId");

                    b.ToTable("RentalStatuses");
                });

            modelBuilder.Entity("SmartRentCar.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RentalStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentalId");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalStatusId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("ContractService.Models.Contract", b =>
                {
                    b.HasOne("ContractService.Models.DepositDispute", "DepositDispute")
                        .WithMany()
                        .HasForeignKey("DepositDisputeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepositDispute");
                });

            modelBuilder.Entity("ContractService.Models.DepositDispute", b =>
                {
                    b.HasOne("ContractService.Models.DisputeStatus", "DisputeStatus")
                        .WithMany()
                        .HasForeignKey("DisputeStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisputeStatus");
                });

            modelBuilder.Entity("ContractService.Models.RentalDocument", b =>
                {
                    b.HasOne("ContractService.Models.DepositDispute", "DepositDispute")
                        .WithMany()
                        .HasForeignKey("DepositDisputeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRentCar.Models.Rental", "Rental")
                        .WithMany()
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepositDispute");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("SmartRentCar.Models.Rental", b =>
                {
                    b.HasOne("ContractService.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContractService.Models.RentalStatus", "RentalStatus")
                        .WithMany()
                        .HasForeignKey("RentalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("RentalStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
